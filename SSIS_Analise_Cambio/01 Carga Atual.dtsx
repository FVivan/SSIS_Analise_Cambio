<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/3/2022 5:44:02 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-GFAIN9R"
  DTS:CreatorName="DESKTOP-GFAIN9R\Larissa"
  DTS:DTSID="{E06598E9-0EE9-4528-A014-35403A0B4493}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.170"
  DTS:LocaleID="1046"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="13"
  DTS:VersionGUID="{D9CEB168-2465-482A-986B-8B536BC6ECFF}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Carga ODS"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Contêiner da Sequência"
      DTS:DTSID="{3B225EE5-BE24-4777-8D1C-3C8253481ADC}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Carga ODS">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Carga ODS\Carrega ODS_DESEMPREGO"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Tarefa Executar SQL"
          DTS:DTSID="{2fa2f284-0ef0-4092-a1b2-43be9aefab6b}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Carrega ODS_DESEMPREGO"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6A61A5ED-595B-43E6-B4C3-8D3BB4A8CA6E}"
              SQLTask:SqlStatementSource="TRUNCATE TABLE [BI_CAMBIO].[dbo].[ODS_DESEMPREGO]&#xA;&#xA;INSERT INTO [BI_CAMBIO].[dbo].[ODS_DESEMPREGO]&#xA;SELECT CAST(Período AS date) AS [Data]&#xA;&#x9;,CAST(Percentual AS decimal(10,2)) AS [Valor]&#xA;FROM [BI_CAMBIO].[dbo].[STG_DESEMPREGO];" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Carga ODS\Carrega ODS_INDUSTRIA"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Tarefa Executar SQL"
          DTS:DTSID="{33A51866-1B4E-4BD4-8F24-0F94A146D378}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Carrega ODS_INDUSTRIA"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6A61A5ED-595B-43E6-B4C3-8D3BB4A8CA6E}"
              SQLTask:SqlStatementSource="TRUNCATE TABLE [BI_CAMBIO].[dbo].[ODS_INDUSTRIA]&#xA;&#xA;INSERT INTO [BI_CAMBIO].[dbo].[ODS_INDUSTRIA]&#xA;SELECT CAST(Mês AS date) AS [Mês], Estado, CAST(REPLACE(Valor, ',', '.') AS decimal(10,2)) AS [Valor]&#xA;FROM&#xA;   (SELECT [Mês],[Nordeste],[Amazonas],[Pará],[Ceará],[Pernambuco],[Bahia],[Minas Gerais],[Espírito Santo]&#xA;   ,[Rio de Janeiro],[São Paulo],[Paraná],[Santa Catarina],[Rio Grande do Sul],[Mato Grosso],[Goiás] &#xA;   FROM [BI_CAMBIO].[dbo].[STG_INDUSTRIA]) p&#xA;UNPIVOT&#xA;   (Valor FOR Estado IN&#xA;      ([Nordeste],[Amazonas],[Pará],[Ceará],[Pernambuco],[Bahia],[Minas Gerais],[Espírito Santo]&#xA;&#x9;  ,[Rio de Janeiro],[São Paulo],[Paraná],[Santa Catarina],[Rio Grande do Sul],[Mato Grosso],[Goiás])  &#xA;)AS unpvt WHERE Valor != '...';&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Carga ODS\Carrega ODS_MOEDA"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Tarefa Executar SQL"
          DTS:DTSID="{954284D9-56F4-4D70-9A0B-BCF16844530B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Carrega ODS_MOEDA"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6A61A5ED-595B-43E6-B4C3-8D3BB4A8CA6E}"
              SQLTask:SqlStatementSource="TRUNCATE TABLE [BI_CAMBIO].[dbo].[ODS_MOEDA]&#xA;&#xA;INSERT INTO [BI_CAMBIO].[dbo].[ODS_MOEDA]&#xA;SELECT CAST([Data] AS date) AS [Data]&#xA;&#x9;  ,LEFT([Moeda], 3) AS [Moeda]&#xA;&#x9;  ,CAST(REPLACE([Mínima], ',', '.') AS decimal(10,5)) AS [Mínimo]&#xA;&#x9;  ,CAST(REPLACE([Máxima], ',', '.') AS decimal(10,5)) AS [Máximo]&#xA;&#x9;  ,CAST(REPLACE(REPLACE([Var%], '%', ''), ',', '.') AS decimal(10,5)) AS [Variação]&#xA;FROM [BI_CAMBIO].[dbo].[STG_HIST_MOEDA]&#xA;UNION&#xA;SELECT CAST(GETDATE() AS date) AS [Data]&#xA;&#x9;  ,[Moeda]&#xA;&#x9;  ,CAST([Min] AS decimal(10,5)) AS [Mínimo]&#xA;&#x9;  ,CAST([Max] AS decimal(10,5)) AS [Máximo]&#xA;&#x9;  ,CAST([PctChange] AS decimal(10,5)) AS [Variação]&#xA;FROM [BI_CAMBIO].[dbo].[STG_MOEDA];" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Carga ODS\Carrega ODS_PESSOAS"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Tarefa Executar SQL"
          DTS:DTSID="{DF6A8993-5036-4E91-BC95-CA40EE27E37C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Carrega ODS_PESSOAS"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6A61A5ED-595B-43E6-B4C3-8D3BB4A8CA6E}"
              SQLTask:SqlStatementSource="TRUNCATE TABLE [BI_CAMBIO].[dbo].[ODS_PESSOAS]&#xA;&#xA;DECLARE @mes DATE, @ano DATE;&#xA;DECLARE ano_cursor CURSOR FOR&#xA;SELECT CAST(periodo AS date) FROM [BI_CAMBIO].[dbo].[STG_PESSOAS]&#xA;&#xA;OPEN ano_cursor&#xA;FETCH NEXT FROM ano_cursor&#xA;INTO @ano;&#xA;&#xA;WHILE @@FETCH_STATUS = 0  &#xA;BEGIN &#xA;&#xA;SET @mes = @ano&#xA;WHILE YEAR(@mes) = YEAR(@ano)&#xA;BEGIN&#xA;&#x9;INSERT INTO [BI_CAMBIO].[dbo].[ODS_PESSOAS]&#xA;&#x9;SELECT @mes, valor FROM [BI_CAMBIO].[dbo].[STG_PESSOAS]&#xA;&#x9;WHERE periodo = YEAR(@mes)&#xA;&#xA;&#x9;SET @mes = DATEADD(MONTH, 1, @mes)&#xA;END&#xA;FETCH NEXT FROM ano_cursor&#xA;INTO @ano;&#xA;&#xA;END&#xA;&#xA;CLOSE ano_cursor;  &#xA;DEALLOCATE ano_cursor;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Carga ODS\Carrega ODS_PIB"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Tarefa Executar SQL"
          DTS:DTSID="{3C3A5E96-1DC7-44A6-A50E-BE8561C1E302}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Carrega ODS_PIB"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6A61A5ED-595B-43E6-B4C3-8D3BB4A8CA6E}"
              SQLTask:SqlStatementSource="TRUNCATE TABLE [BI_CAMBIO].[dbo].[ODS_PIB]&#xA;&#xA;INSERT INTO [BI_CAMBIO].[dbo].[ODS_PIB]&#xA;SELECT CASE&#xA;&#x9;&#x9;WHEN LEFT(periodo, 1) = 1 AND RIGHT(value, 2) = 'Âº' THEN CAST(RIGHT(periodo, 4) AS date)&#xA;&#x9;&#x9;WHEN LEFT(periodo, 1) = 1 AND value = 'tri' THEN DATEADD(MONTH, 1, CAST(RIGHT(periodo, 4) AS date))&#xA;&#x9;&#x9;WHEN LEFT(periodo, 1) = 1 AND value = RIGHT(periodo, 4) THEN DATEADD(MONTH, 2, CAST(RIGHT(periodo, 4) AS date))&#xA;&#x9;&#x9;WHEN LEFT(periodo, 1) = 2 AND RIGHT(value, 2) = 'Âº' THEN DATEADD(MONTH, 3, CAST(RIGHT(periodo, 4) AS date))&#xA;&#x9;&#x9;WHEN LEFT(periodo, 1) = 2 AND value = 'tri' THEN DATEADD(MONTH, 4, CAST(RIGHT(periodo, 4) AS date))&#xA;&#x9;&#x9;WHEN LEFT(periodo, 1) = 2 AND value = RIGHT(periodo, 4) THEN DATEADD(MONTH, 5, CAST(RIGHT(periodo, 4) AS date))&#xA;&#x9;&#x9;WHEN LEFT(periodo, 1) = 3 AND RIGHT(value, 2) = 'Âº' THEN DATEADD(MONTH, 6, CAST(RIGHT(periodo, 4) AS date))&#xA;&#x9;&#x9;WHEN LEFT(periodo, 1) = 3 AND value = 'tri' THEN DATEADD(MONTH, 7, CAST(RIGHT(periodo, 4) AS date))&#xA;&#x9;&#x9;WHEN LEFT(periodo, 1) = 3 AND value = RIGHT(periodo, 4) THEN DATEADD(MONTH, 8, CAST(RIGHT(periodo, 4) AS date))&#xA;&#x9;&#x9;WHEN LEFT(periodo, 1) = 4 AND RIGHT(value, 2) = 'Âº' THEN DATEADD(MONTH, 9, CAST(RIGHT(periodo, 4) AS date))&#xA;&#x9;&#x9;WHEN LEFT(periodo, 1) = 4 AND value = 'tri' THEN DATEADD(MONTH, 10, CAST(RIGHT(periodo, 4) AS date))&#xA;&#x9;&#x9;WHEN LEFT(periodo, 1) = 4 AND value = RIGHT(periodo, 4) THEN DATEADD(MONTH, 11, CAST(RIGHT(periodo, 4) AS date))&#xA;&#x9;ELSE NULL END AS [Data]&#xA;&#x9;,CAST(valor AS decimal(10,2)) AS [Valor]&#xA;FROM [BI_CAMBIO].[dbo].[STG_PIB]&#xA;CROSS APPLY string_split(periodo, ' ');" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Carga ODS\Carrega ODS_RENDA"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Tarefa Executar SQL"
          DTS:DTSID="{EB119C65-6449-4103-821C-431874ED10F8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Carrega ODS_RENDA"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="5">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6A61A5ED-595B-43E6-B4C3-8D3BB4A8CA6E}"
              SQLTask:SqlStatementSource="TRUNCATE TABLE [BI_CAMBIO].[dbo].[ODS_RENDA]&#xA;&#xA;INSERT INTO [BI_CAMBIO].[dbo].[ODS_RENDA]&#xA;SELECT CAST([Período] AS date) AS [Data]&#xA;&#x9;,CAST(Valor AS int) AS [Valor]&#xA;FROM [BI_CAMBIO].[dbo].[STG_RENDA];" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ler API para STG"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Tarefa Script"
      DTS:DTSID="{33F98F58-584A-4413-A495-8CA0389B905C}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ler API para STG"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_b69f61e680964aadba70cb1c2b5eee23"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="13.0.1" targetFramework="net47" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System.IO;
using System.Data.SqlClient;
#endregion

namespace ST_b69f61e680964aadba70cb1c2b5eee23
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //Baixa o conte�do via API
            var wc = new WebClient();
            string html = wc.DownloadString("https://economia.awesomeapi.com.br/json/last/USD-BRL,EUR-BRL,BTC-BRL,AUD-BRL,GBP-BRL,JPY-BRL");
            //Converte para UTF8
            byte[] bytes = Encoding.Default.GetBytes(html);
            html = Encoding.UTF8.GetString(bytes);
            //Transforma em json Object
            JObject rss = JObject.Parse(html);
            //String de conex�o
            string connectionString = @"Data Source=localhost\SQLEXPRESS;Database=BI_CAMBIO;Trusted_Connection=True";
            //Constr�i a query para inserir dados na STG
            string commandText = "INSERT INTO STG_MOEDA (Cambio,Max,Min,Var,PctChange,Moeda) VALUES ('" + (string)rss["USDBRL"]["name"] + "','" + (string)rss["USDBRL"]["high"] + "','" + (string)rss["USDBRL"]["low"] + "','" + (string)rss["USDBRL"]["varBid"] + "','" + (string)rss["USDBRL"]["pctChange"] + "','" + (string)rss["USDBRL"]["code"] + "');";
            commandText += "INSERT INTO STG_MOEDA (Cambio,Max,Min,Var,PctChange,Moeda) VALUES ('" + (string)rss["EURBRL"]["name"] + "','" + (string)rss["EURBRL"]["high"] + "','" + (string)rss["EURBRL"]["low"] + "','" + (string)rss["EURBRL"]["varBid"] + "','" + (string)rss["EURBRL"]["pctChange"] + "','" + (string)rss["EURBRL"]["code"] + "');";
            commandText += "INSERT INTO STG_MOEDA (Cambio,Max,Min,Var,PctChange,Moeda) VALUES ('" + (string)rss["BTCBRL"]["name"] + "','" + (string)rss["BTCBRL"]["high"] + "','" + (string)rss["BTCBRL"]["low"] + "','" + (string)rss["BTCBRL"]["varBid"] + "','" + (string)rss["BTCBRL"]["pctChange"] + "','" + (string)rss["BTCBRL"]["code"] + "');";
            commandText += "INSERT INTO STG_MOEDA (Cambio,Max,Min,Var,PctChange,Moeda) VALUES ('" + (string)rss["AUDBRL"]["name"] + "','" + (string)rss["AUDBRL"]["high"] + "','" + (string)rss["AUDBRL"]["low"] + "','" + (string)rss["AUDBRL"]["varBid"] + "','" + (string)rss["AUDBRL"]["pctChange"] + "','" + (string)rss["AUDBRL"]["code"] + "');";
            commandText += "INSERT INTO STG_MOEDA (Cambio,Max,Min,Var,PctChange,Moeda) VALUES ('" + (string)rss["GBPBRL"]["name"] + "','" + (string)rss["GBPBRL"]["high"] + "','" + (string)rss["GBPBRL"]["low"] + "','" + (string)rss["GBPBRL"]["varBid"] + "','" + (string)rss["GBPBRL"]["pctChange"] + "','" + (string)rss["GBPBRL"]["code"] + "');";
            commandText += "INSERT INTO STG_MOEDA (Cambio,Max,Min,Var,PctChange,Moeda) VALUES ('" + (string)rss["JPYBRL"]["name"] + "','" + (string)rss["JPYBRL"]["high"] + "','" + (string)rss["JPYBRL"]["low"] + "','" + (string)rss["JPYBRL"]["varBid"] + "','" + (string)rss["JPYBRL"]["pctChange"] + "','" + (string)rss["JPYBRL"]["code"] + "');";
            //Abre conex�o, executa a query e fecha a conex�o
            using (SqlConnection conn = new SqlConnection(connectionString))
            using (SqlCommand cmd = new SqlCommand(commandText, conn))
            {
                conn.Open();
                cmd.ExecuteNonQuery();
                conn.Close();
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_b69f61e680964aadba70cb1c2b5eee23.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C45FB6FD-8BE9-49FA-8F93-A83E9E7AD0EB}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_b69f61e680964aadba70cb1c2b5eee23</RootNamespace>
    <AssemblyName>ST_b69f61e680964aadba70cb1c2b5eee23</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\Larissa\AppData\Local\Temp\Vsta\SSIS_ST150\VstaxEWJ8KX8oE2WzXFHo2s31w\packages\Newtonsoft.Json.13.0.1\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_b69f61e680964aadba70cb1c2b5eee23</msb:CodeName>
    <msb:DisplayName>ST_b69f61e680964aadba70cb1c2b5eee23</msb:DisplayName>
    <msb:ProjectId>{A5946646-BCA9-438C-AAA5-F93B1A187AA1}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_b69f61e680964aadba70cb1c2b5eee23.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b69f61e680964aadba70cb1c2b5eee23.Properties.Settings.get_Default():ST_b69f61e680964aadba70cb1c2b5eee23.Properties.Sett" +
    "ings")]

namespace ST_b69f61e680964aadba70cb1c2b5eee23.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_b69f61e680964aadba70cb1c2b5eee23")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_b69f61e680964aadba70cb1c2b5eee23")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b69f61e680964aadba70cb1c2b5eee23.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b69f61e680964aadba70cb1c2b5eee23.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b69f61e680964aadba70cb1c2b5eee23.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_b69f61e680964aadba70cb1c2b5eee23.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_b69f61e680964aadba70cb1c2b5eee23.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_b69f61e680964aadba70cb1c2b5eee23.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABRh02EAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAA9jcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKQ3AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA/BcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADY
NwAAAAAAAEgAAAACAAUAVCcAAJgPAAABAAAAAAAAAOw2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQBzBgAAAQAAEXMQAAAKcgEAAHBvEQAACgooEgAACgZv
EwAACgsoFAAACgdvFQAACgoGKBYAAAoMcrwAAHANHw2NHQAAASUWclUBAHCiJRcIcuABAHBvFwAA
CnLuAQBwbxgAAAooGQAACqIlGHL4AQBwoiUZCHLgAQBwbxcAAApyAAIAcG8YAAAKKBkAAAqiJRpy
+AEAcKIlGwhy4AEAcG8XAAAKcgoCAHBvGAAACigZAAAKoiUccvgBAHCiJR0IcuABAHBvFwAACnIS
AgBwbxgAAAooGQAACqIlHnL4AQBwoiUfCQhy4AEAcG8XAAAKciACAHBvGAAACigZAAAKoiUfCnL4
AQBwoiUfCwhy4AEAcG8XAAAKcjQCAHBvGAAACigZAAAKoiUfDHI+AgBwoigaAAAKEwQfDo0dAAAB
JRYRBKIlF3JVAQBwoiUYCHJGAgBwbxcAAApy7gEAcG8YAAAKKBkAAAqiJRly+AEAcKIlGghyRgIA
cG8XAAAKcgACAHBvGAAACigZAAAKoiUbcvgBAHCiJRwIckYCAHBvFwAACnIKAgBwbxgAAAooGQAA
CqIlHXL4AQBwoiUeCHJGAgBwbxcAAApyEgIAcG8YAAAKKBkAAAqiJR8JcvgBAHCiJR8KCHJGAgBw
bxcAAApyIAIAcG8YAAAKKBkAAAqiJR8LcvgBAHCiJR8MCHJGAgBwbxcAAApyNAIAcG8YAAAKKBkA
AAqiJR8Ncj4CAHCiKBoAAAoTBB8OjR0AAAElFhEEoiUXclUBAHCiJRgIclQCAHBvFwAACnLuAQBw
bxgAAAooGQAACqIlGXL4AQBwoiUaCHJUAgBwbxcAAApyAAIAcG8YAAAKKBkAAAqiJRty+AEAcKIl
HAhyVAIAcG8XAAAKcgoCAHBvGAAACigZAAAKoiUdcvgBAHCiJR4IclQCAHBvFwAACnISAgBwbxgA
AAooGQAACqIlHwly+AEAcKIlHwoIclQCAHBvFwAACnIgAgBwbxgAAAooGQAACqIlHwty+AEAcKIl
HwwIclQCAHBvFwAACnI0AgBwbxgAAAooGQAACqIlHw1yPgIAcKIoGgAAChMEHw6NHQAAASUWEQSi
JRdyVQEAcKIlGAhyYgIAcG8XAAAKcu4BAHBvGAAACigZAAAKoiUZcvgBAHCiJRoIcmICAHBvFwAA
CnIAAgBwbxgAAAooGQAACqIlG3L4AQBwoiUcCHJiAgBwbxcAAApyCgIAcG8YAAAKKBkAAAqiJR1y
+AEAcKIlHghyYgIAcG8XAAAKchICAHBvGAAACigZAAAKoiUfCXL4AQBwoiUfCghyYgIAcG8XAAAK
ciACAHBvGAAACigZAAAKoiUfC3L4AQBwoiUfDAhyYgIAcG8XAAAKcjQCAHBvGAAACigZAAAKoiUf
DXI+AgBwoigaAAAKEwQfDo0dAAABJRYRBKIlF3JVAQBwoiUYCHJwAgBwbxcAAApy7gEAcG8YAAAK
KBkAAAqiJRly+AEAcKIlGghycAIAcG8XAAAKcgACAHBvGAAACigZAAAKoiUbcvgBAHCiJRwIcnAC
AHBvFwAACnIKAgBwbxgAAAooGQAACqIlHXL4AQBwoiUeCHJwAgBwbxcAAApyEgIAcG8YAAAKKBkA
AAqiJR8JcvgBAHCiJR8KCHJwAgBwbxcAAApyIAIAcG8YAAAKKBkAAAqiJR8LcvgBAHCiJR8MCHJw
AgBwbxcAAApyNAIAcG8YAAAKKBkAAAqiJR8Ncj4CAHCiKBoAAAoTBB8OjR0AAAElFhEEoiUXclUB
AHCiJRgIcn4CAHBvFwAACnLuAQBwbxgAAAooGQAACqIlGXL4AQBwoiUaCHJ+AgBwbxcAAApyAAIA
cG8YAAAKKBkAAAqiJRty+AEAcKIlHAhyfgIAcG8XAAAKcgoCAHBvGAAACigZAAAKoiUdcvgBAHCi
JR4Icn4CAHBvFwAACnISAgBwbxgAAAooGQAACqIlHwly+AEAcKIlHwoIcn4CAHBvFwAACnIgAgBw
bxgAAAooGQAACqIlHwty+AEAcKIlHwwIcn4CAHBvFwAACnI0AgBwbxgAAAooGQAACqIlHw1yPgIA
cKIoGgAAChMECXMbAAAKEwURBBEFcxwAAAoTBhEFbx0AAAoRBm8eAAAKJhEFbx8AAAreGBEGLAcR
Bm8gAAAK3BEFLAcRBW8gAAAK3AIoIQAAChZvIgAACioAARwAAAIANgYYTgYMAAAAAAIAKwYvWgYM
AAAAAB4CKCMAAAoqHgIoJAAACiqufgEAAAQtHnKMAgBw0AMAAAIoJQAACm8mAAAKcycAAAqAAQAA
BH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigoAAAKKi5zCAAABoADAAAEKgAAQlNKQgEA
AQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAUAQAACN+AAC8BAAAJAYAACNTdHJpbmdzAAAA
AOAKAAAAAwAAI1VTAOANAAAQAAAAI0dVSUQAAADwDQAAqAEAACNCbG9iAAAAAAAAAAIAAAFXHaIB
CQMAAAD6ATMAFgAAAQAAACUAAAAFAAAABgAAAAkAAAABAAAAKAAAAAIAAAAQAAAAAQAAAAIAAAAD
AAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAIYDAQAAAAAABgAnArUEBgC2ArUEBgBzAaIEDwApBQAA
BgCgARAEBgAKAhAEBgDrARAEBgCdAhAEBgBHAhAEBgBgAhAEBgC3ARAEBgDSAeMCCgB7AjUDCgDe
ADUDDgCeBWwEEgAvBOIFEgBeAOIFBgC+A7cDBgBWAaIEBgCfBbcDBgCFBNUEBgBgBPsDFgAmAXAD
FgCHAXADFgD6AOYDBgA7AbUEFgDYBaYFBgDaAvgFBgAPA7cDDgDPA2wEEgAiBD0EEgBUAD0EBgB5
ALcDCgBeAzUDBgCpALcDBgCFALcDBgAIBhAEAAAAAC4AAAAAAAEAAQABABAA2wMBADkAAQABAAAA
EADcBDgFUQABAAMAAAEQAHAFOAVlAAMABwADAQAAiQUAAEkABAAKABEAwwOqABEAzgCuABEAaQCy
AAYGNwC2AFaAeQW5AFaArgC5AFAgAAAAAIYA4QMGAAEA7CYAAAAAhhiVBAYAAQD0JgAAAACDGJUE
BgABAPwmAAAAAJMIgQS9AAEAKCcAAAAAkwi2AMIAAQAvJwAAAACTCMIAxwABADcnAAAAAJYIvQXN
AAIAPicAAAAAhhiVBAYAAgBGJwAAAACRGJsE0gACAAAAAQDUAgkAlQQBABEAlQQGABkAlQQKACkA
lQQQADEAlQQQADkAlQQQAEEAlQQQAEkAlQQQAFEAlQQQAFkAlQQQAGEAlQQQAGkAlQQGAJkAlQQG
AMEAlQQVANEAlQQGANkAlQQGANkA/QIpAOEAvQUuAOEAZwUzAOEAJQAuAOEADAM5AHkAIAE/AHkA
rgNFAPEArgNLAPEAsQVRAOkAlwVXAIEAlQQQAIkAlQRdAPkA1gMGAAEBEQZkAPkAEgEGAAkBGAEG
AHEAgQVoABEByQUBAHEAlQQGAKEAlQQGABkBlwBuABkBBAZ3AKkAlQR9AMkAlQQGAAgAFACgAAgA
GAClACkAcwANAS4ACwDlAC4AEwDuAC4AGwANAS4AIwAWAS4AKwA/AS4AMwA/AS4AOwA/AS4AQwAW
AS4ASwBFAS4AUwA/AS4AWwBcAUMAYwClAEkAcwANAWEAewClAGMAawClABsAAwABAAQAAwAAAIUE
1gAAANYA2wAAAMEF4AACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAGYfMn0AAAAAAAAB
AAAABAAAAAAAAAAAAAAAhQBLAAAAAAAPAAAAAAAAAAAAAACOABYDAAAAAA0AAAAAAAAAAAAAAJcA
UAQAAAAABAAAAAAAAAAAAAAAhQA/AAAAAAAEAAAAAAAAAAAAAACFALcDAAAAAAAAAAABAAAA5gQA
AAUAAgAAAAAAAFNUX2I2OWY2MWU2ODA5NjRhYWRiYTcwY2IxYzJiNWVlZTIzAGdldF9VVEY4ADxN
b2R1bGU+AHZhbHVlX18AU3lzdGVtLkRhdGEAbXNjb3JsaWIARGJDb21tYW5kAFNxbENvbW1hbmQA
ZGVmYXVsdEluc3RhbmNlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1
cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENs
b3NlAERpc3Bvc2UAUGFyc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHZhbHVlAEVu
Y29kaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARG93bmxvYWRTdHJpbmcAR2V0U3RyaW5n
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
VF9iNjlmNjFlNjgwOTY0YWFkYmE3MGNiMWMyYjVlZWUyMy5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVu
dW0AcmVzb3VyY2VNYW4ASlRva2VuAE9wZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3Fs
Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24ATmV3dG9uc29mdC5Kc29uAEN1bHR1cmVJbmZv
AE5ld3RvbnNvZnQuSnNvbi5MaW5xAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5
c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5S
ZXNvdXJjZXMAU1RfYjY5ZjYxZTY4MDk2NGFhZGJhNzBjYjFjMmI1ZWVlMjMuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2I2OWY2MWU2ODA5NjRhYWRiYTcw
Y2IxYzJiNWVlZTIzLlByb3BlcnRpZXMAR2V0Qnl0ZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRz
AFNjcmlwdFJlc3VsdHMAQ29uY2F0AEpPYmplY3QAU3lzdGVtLk5ldABvcF9FeHBsaWNpdABnZXRf
RGVmYXVsdABzZXRfVGFza1Jlc3VsdABXZWJDbGllbnQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFN5
c3RlbS5UZXh0AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVlcnkAAAAAAIC5aAB0AHQAcABzADoA
LwAvAGUAYwBvAG4AbwBtAGkAYQAuAGEAdwBlAHMAbwBtAGUAYQBwAGkALgBjAG8AbQAuAGIAcgAv
AGoAcwBvAG4ALwBsAGEAcwB0AC8AVQBTAEQALQBCAFIATAAsAEUAVQBSAC0AQgBSAEwALABCAFQA
QwAtAEIAUgBMACwAQQBVAEQALQBCAFIATAAsAEcAQgBQAC0AQgBSAEwALABKAFAAWQAtAEIAUgBM
AAGAl0QAYQB0AGEAIABTAG8AdQByAGMAZQA9AGwAbwBjAGEAbABoAG8AcwB0AFwAUwBRAEwARQBY
AFAAUgBFAFMAUwA7AEQAYQB0AGEAYgBhAHMAZQA9AEIASQBfAEMAQQBNAEIASQBPADsAVAByAHUA
cwB0AGUAZABfAEMAbwBuAG4AZQBjAHQAaQBvAG4APQBUAHIAdQBlAACAiUkATgBTAEUAUgBUACAA
SQBOAFQATwAgAFMAVABHAF8ATQBPAEUARABBACAAKABDAGEAbQBiAGkAbwAsAE0AYQB4ACwATQBp
AG4ALABWAGEAcgAsAFAAYwB0AEMAaABhAG4AZwBlACwATQBvAGUAZABhACkAIABWAEEATABVAEUA
UwAgACgAJwABDVUAUwBEAEIAUgBMAAAJbgBhAG0AZQAABycALAAnAAEJaABpAGcAaAAAB2wAbwB3
AAANdgBhAHIAQgBpAGQAABNwAGMAdABDAGgAYQBuAGcAZQAACWMAbwBkAGUAAAcnACkAOwABDUUA
VQBSAEIAUgBMAAANQgBUAEMAQgBSAEwAAA1BAFUARABCAFIATAAADUcAQgBQAEIAUgBMAAANSgBQ
AFkAQgBSAEwAAHFTAFQAXwBiADYAOQBmADYAMQBlADYAOAAwADkANgA0AGEAYQBkAGIAYQA3ADAA
YwBiADEAYwAyAGIANQBlAGUAZQAyADMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAAAAa8xjuW3lxUmcVALQbNNpggAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQ0H
Bw4dBRI9Dg4SQRJFBCABDg4EAAAScQUgAR0FDgUgAQ4dBQUAARI9DgUgARJ5DgUgARJ5HAUAAQ4S
eQUAAQ4dDgYgAgEOEkEDIAAIBSAAEoCJCAABEoCNEYCRBSAAEoCVByACAQ4SgJUIt3pcVhk04IkI
iYRdzYCAzJEIMK1P5rKmru0EAAAAAAQBAAAAAwYSVQMGElkDBhIQAgYIAwYRFAQAABJVBAAAElkF
AAEBElkEAAASEAMAAAEECAASVQQIABJZBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2I2OWY2MWU2ODA5NjRhYWRiYTcwY2IxYzJiNWVl
ZTIzAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjIAAEkBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43AAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAzDcAAAAAAAAAAAAA5jcAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAANg3AAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABADJ9Zh8AAAEAMn1mHz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AYgA2ADkAZgA2ADEAZQA2ADgAMAA5ADYANABhAGEAZABiAGEANwAwAGMAYgAxAGMAMgBi
ADUAZQBlAGUAMgAzAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgA
MAAzADgALgAzADIAMAA1ADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AYgA2ADkAZgA2ADEAZQA2ADgAMAA5ADYANABhAGEAZABiAGEANwAwAGMAYgAxAGMAMgBiADUA
ZQBlAGUAMgAzAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwBiADYAOQBmADYAMQBlADYAOAAwADkANgA0AGEAYQBkAGIAYQA3ADAAYwBiADEA
YwAyAGIANQBlAGUAZQAyADMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AYgA2ADkAZgA2ADEAZQA2ADgAMAA5ADYANABhAGEAZABiAGEANwAwAGMAYgAxAGMA
MgBiADUAZQBlAGUAMgAzAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA4ADAAMwA4AC4AMwAyADAANQAwAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA4ADAAMwA4AC4AMwAyADAANQAwAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAPg3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Limpa STG"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarefa Executar SQL"
      DTS:DTSID="{18A503C0-6624-42C6-8E8A-1BFE9839A550}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Limpa STG"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6A61A5ED-595B-43E6-B4C3-8D3BB4A8CA6E}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [BI_CAMBIO].[dbo].[STG_MOEDA]&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restrição]"
      DTS:CreationName=""
      DTS:DTSID="{873C827F-1C10-4221-851F-4E45DAEBE830}"
      DTS:From="Package\Limpa STG"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restrição"
      DTS:To="Package\Ler API para STG" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restrição 1]"
      DTS:CreationName=""
      DTS:DTSID="{6A69941D-6A13-4468-9B7F-41BB9CA26DB4}"
      DTS:From="Package\Ler API para STG"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restrição 1"
      DTS:To="Package\Carga ODS" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta seção CDATA contém as informações de layout do pacote. A seção inclui informações como coordenadas (x,y), largura e altura.-->
<!--Se você editar manualmente esta seção e cometer algum erro, poderá excluí-la. -->
<!--O pacote ainda poderá ser carregado normalmente, mas as informações de layout anteriores serão perdidas e o designer reorganizará automaticamente os elementos na superfície de design.-->
<Objects
  Version="8">
  <!--Cada nó abaixo conterá propriedades que não afetam o comportamento em tempo de execução.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="230,42"
          Id="Package\Carga ODS\Carrega ODS_DESEMPREGO"
          TopLeft="30,83" />
        <NodeLayout
          Size="230,42"
          Id="Package\Carga ODS\Carrega ODS_INDUSTRIA"
          TopLeft="30,150" />
        <NodeLayout
          Size="230,42"
          Id="Package\Carga ODS\Carrega ODS_MOEDA"
          TopLeft="30,20" />
        <NodeLayout
          Size="230,42"
          Id="Package\Carga ODS\Carrega ODS_PESSOAS"
          TopLeft="308,20" />
        <NodeLayout
          Size="230,42"
          Id="Package\Carga ODS\Carrega ODS_PIB"
          TopLeft="308,83" />
        <NodeLayout
          Size="230,42"
          Id="Package\Carga ODS\Carrega ODS_RENDA"
          TopLeft="308,150" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="581,258"
          Size="581,301"
          Id="Package\Carga ODS"
          TopLeft="61.5,218" />
        <NodeLayout
          Size="166,42"
          Id="Package\Ler API para STG"
          TopLeft="269,135" />
        <NodeLayout
          Size="166,42"
          Id="Package\Limpa STG"
          TopLeft="269,64" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restrição]"
          TopLeft="352,106">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restrição 1]"
          TopLeft="352,177">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>